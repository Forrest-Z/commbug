
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;

	private global::Gtk.Action FAction;

	private global::Gtk.Action HAction;

	private global::Gtk.Action quitAction;

	private global::Gtk.Action aboutAction;

	private global::Gtk.Table tableMain;

	private global::Gtk.HPaned hpanedMain;

	private global::Gtk.VBox vboxLeft;

	private global::Gtk.Expander expanderCommSet;

	private global::Gtk.Alignment alignmentCommSet;

	private global::Gtk.VBox vboxCommSet;

	private global::Gtk.Table tableCommSetBasic;

	private global::Gtk.Table tableCommBasic;

	private global::Gtk.ComboBoxEntry comboboxentryBaudRate;

	private global::Gtk.ComboBox comboboxPortName;

	private global::Gtk.Image imageBaudRate;

	private global::Gtk.Image imageCommSelect;

	private global::Gtk.Label labelBaudRate;

	private global::Gtk.Label labelCommSelect;

	private global::Gtk.Expander expanderSetComm;

	private global::Gtk.Table tableCommSet;

	private global::Gtk.Table tableCommSetDataBits;

	private global::Gtk.Label labelDataBits;

	private global::Gtk.SpinButton spinbuttonDataBits;

	private global::Gtk.Table tableCommSetParity;

	private global::Gtk.ComboBox comboboxPatity;

	private global::Gtk.Label labelParity;

	private global::Gtk.Table tableCommSetStopBits;

	private global::Gtk.ComboBox comboboxStopBits;

	private global::Gtk.Label labelStopBits;

	private global::Gtk.VSeparator vseparatorCommSetL;

	private global::Gtk.VSeparator vseparatorCommSetR;

	private global::Gtk.Label GtkLabelCommAdvanced;

	private global::Gtk.Table tableComm;

	private global::Gtk.Label labelPortState;

	private global::Gtk.ToggleButton togglebuttonPortSwitch;

	private global::Gtk.Label GtkLabelCommSet;

	private global::Gtk.HSeparator hseparatorLeftA;

	private global::Gtk.Expander expanderSendSet;

	private global::Gtk.Alignment alignmentSendSetExpan;

	private global::Gtk.Alignment GtkAlignmentSendSet;

	private global::Gtk.Table tableSendSet;

	private global::Gtk.Expander expanderAutoSend;

	private global::Gtk.Table tableAutoSend;

	private global::Gtk.CheckButton checkbuttonAutoSend;

	private global::Gtk.Label labelSetInterval;

	private global::Gtk.Label labelSetIntervalms;

	private global::Gtk.SpinButton spinbuttonInterval;

	private global::Gtk.Label GtkLabelAutoSend;

	private global::Gtk.Expander expanderSendContents;

	private global::Gtk.Table tableSendContents;

	private global::Gtk.ScrolledWindow GtkScrolledWindow;

	private global::Gtk.TextView textviewSend;

	private global::Gtk.Table tableSendContentsSet;

	private global::Gtk.Button buttonSend;

	private global::Gtk.RadioButton radiobuttonDec;

	private global::Gtk.RadioButton radiobuttonHex;

	private global::Gtk.RadioButton radiobuttonText;

	private global::Gtk.Label GtkLabelSendContents;

	private global::Gtk.Label GtkLabelSendSet;

	private global::Gtk.HSeparator hseparatorLeftB;

	private global::Gtk.Expander expanderAbout;

	private global::Gtk.Table tableAbout;

	private global::Gtk.Label labelAbout;

	private global::Gtk.Label GtkLabelAbout;

	private global::Gtk.VPaned vpanedRight;

	private global::Gtk.VBox vboxReceiveArea;

	private global::Gtk.Frame frameReceiveArea;

	private global::Gtk.Alignment GtkAlignmentReceiveArea;

	private global::Gtk.Notebook notebookReceiveArea;

	private global::Gtk.ScrolledWindow GtkScrolledWindowText;

	private global::Gtk.TextView textviewText;

	private global::Gtk.Label labelRText;

	private global::Gtk.ScrolledWindow GtkScrolledWindowHex;

	private global::Gtk.TextView textviewHex;

	private global::Gtk.Label labelRHex;

	private global::Gtk.ScrolledWindow GtkScrolledWindowDec;

	private global::Gtk.TextView textviewDec;

	private global::Gtk.Label labelRDec;

	private global::Gtk.Label GtkLabelR;

	private global::Gtk.Expander expanderDataShowSet;

	private global::Gtk.Alignment alignmentClear;

	private global::Gtk.Table tableDataShowSet;

	private global::Gtk.Table tableScrollSet;

	private global::Gtk.CheckButton checkbuttonAutoScrollReceive;

	private global::Gtk.CheckButton checkbuttonAutoScrollSend;

	private global::Gtk.Image imageAutoScroll;

	private global::Gtk.Table tableShowClearSet;

	private global::Gtk.Button buttonClearAll;

	private global::Gtk.Button buttonClearReceiveArea;

	private global::Gtk.Button buttonClearSendArea;

	private global::Gtk.Label GtkLabelDataShowSet;

	private global::Gtk.Frame frameSendArea;

	private global::Gtk.Alignment GtkAlignmentSendArea;

	private global::Gtk.Notebook notebookSendArea;

	private global::Gtk.ScrolledWindow GtkScrolledWindowTextS;

	private global::Gtk.TextView textviewTextS;

	private global::Gtk.Label labelSText;

	private global::Gtk.ScrolledWindow GtkScrolledWindowHexS;

	private global::Gtk.TextView textviewHexS;

	private global::Gtk.Label labelSHex;

	private global::Gtk.ScrolledWindow GtkScrolledWindowDecS;

	private global::Gtk.TextView textviewDecS;

	private global::Gtk.Label labelSDex;

	private global::Gtk.Label GtkLabelSendArea;

	private global::Gtk.MenuBar menubarMain;

	private global::Gtk.Statusbar statusbarMain;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FAction = new global::Gtk.Action ("FAction", global::Mono.Unix.Catalog.GetString ("文件(_F)"), null, null);
		this.FAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("文件(_F)");
		w1.Add (this.FAction, null);
		this.HAction = new global::Gtk.Action ("HAction", global::Mono.Unix.Catalog.GetString ("帮助(_H)"), null, null);
		this.HAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("帮助(_H)");
		w1.Add (this.HAction, null);
		this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("退出(_Q)"), null, "gtk-quit");
		this.quitAction.IsImportant = true;
		this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("退出(_Q)");
		w1.Add (this.quitAction, null);
		this.aboutAction = new global::Gtk.Action ("aboutAction", global::Mono.Unix.Catalog.GetString ("关于(_A)"), null, "gtk-about");
		this.aboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("关于(_A)");
		w1.Add (this.aboutAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("串口调试助手");
		this.Icon = global::Stetic.IconLoader.LoadIcon (this, "stock_draw-connector-with-arrows", global::Gtk.IconSize.Menu);
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.tableMain = new global::Gtk.Table (((uint)(3)), ((uint)(1)), false);
		this.tableMain.Name = "tableMain";
		this.tableMain.RowSpacing = ((uint)(6));
		this.tableMain.ColumnSpacing = ((uint)(6));
		// Container child tableMain.Gtk.Table+TableChild
		this.hpanedMain = new global::Gtk.HPaned ();
		this.hpanedMain.CanFocus = true;
		this.hpanedMain.Name = "hpanedMain";
		this.hpanedMain.Position = 237;
		// Container child hpanedMain.Gtk.Paned+PanedChild
		this.vboxLeft = new global::Gtk.VBox ();
		this.vboxLeft.Name = "vboxLeft";
		this.vboxLeft.Spacing = 6;
		// Container child vboxLeft.Gtk.Box+BoxChild
		this.expanderCommSet = new global::Gtk.Expander (null);
		this.expanderCommSet.CanFocus = true;
		this.expanderCommSet.Name = "expanderCommSet";
		this.expanderCommSet.Expanded = true;
		// Container child expanderCommSet.Gtk.Container+ContainerChild
		this.alignmentCommSet = new global::Gtk.Alignment (0f, 0f, 1f, 1f);
		this.alignmentCommSet.Name = "alignmentCommSet";
		this.alignmentCommSet.LeftPadding = ((uint)(12));
		// Container child alignmentCommSet.Gtk.Container+ContainerChild
		this.vboxCommSet = new global::Gtk.VBox ();
		this.vboxCommSet.Name = "vboxCommSet";
		this.vboxCommSet.Spacing = 6;
		// Container child vboxCommSet.Gtk.Box+BoxChild
		this.tableCommSetBasic = new global::Gtk.Table (((uint)(1)), ((uint)(1)), false);
		this.tableCommSetBasic.Name = "tableCommSetBasic";
		this.tableCommSetBasic.RowSpacing = ((uint)(6));
		this.tableCommSetBasic.ColumnSpacing = ((uint)(6));
		// Container child tableCommSetBasic.Gtk.Table+TableChild
		this.tableCommBasic = new global::Gtk.Table (((uint)(2)), ((uint)(3)), false);
		this.tableCommBasic.Name = "tableCommBasic";
		this.tableCommBasic.RowSpacing = ((uint)(6));
		this.tableCommBasic.ColumnSpacing = ((uint)(6));
		// Container child tableCommBasic.Gtk.Table+TableChild
		this.comboboxentryBaudRate = global::Gtk.ComboBoxEntry.NewText ();
		this.comboboxentryBaudRate.AppendText (global::Mono.Unix.Catalog.GetString ("1200"));
		this.comboboxentryBaudRate.AppendText (global::Mono.Unix.Catalog.GetString ("2400"));
		this.comboboxentryBaudRate.AppendText (global::Mono.Unix.Catalog.GetString ("4800"));
		this.comboboxentryBaudRate.AppendText (global::Mono.Unix.Catalog.GetString ("9600"));
		this.comboboxentryBaudRate.AppendText (global::Mono.Unix.Catalog.GetString ("19200"));
		this.comboboxentryBaudRate.AppendText (global::Mono.Unix.Catalog.GetString ("38400"));
		this.comboboxentryBaudRate.AppendText (global::Mono.Unix.Catalog.GetString ("57600"));
		this.comboboxentryBaudRate.AppendText (global::Mono.Unix.Catalog.GetString ("115200"));
		this.comboboxentryBaudRate.TooltipMarkup = "设置串口波特率。";
		this.comboboxentryBaudRate.WidthRequest = 100;
		this.comboboxentryBaudRate.Name = "comboboxentryBaudRate";
		this.comboboxentryBaudRate.Active = 2;
		this.tableCommBasic.Add (this.comboboxentryBaudRate);
		global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.tableCommBasic[this.comboboxentryBaudRate]));
		w2.TopAttach = ((uint)(1));
		w2.BottomAttach = ((uint)(2));
		w2.LeftAttach = ((uint)(2));
		w2.RightAttach = ((uint)(3));
		w2.XOptions = ((global::Gtk.AttachOptions)(4));
		w2.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommBasic.Gtk.Table+TableChild
		this.comboboxPortName = global::Gtk.ComboBox.NewText ();
		this.comboboxPortName.TooltipMarkup = "选择您要调试的串口。";
		this.comboboxPortName.Name = "comboboxPortName";
		this.tableCommBasic.Add (this.comboboxPortName);
		global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.tableCommBasic[this.comboboxPortName]));
		w3.LeftAttach = ((uint)(2));
		w3.RightAttach = ((uint)(3));
		w3.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommBasic.Gtk.Table+TableChild
		this.imageBaudRate = new global::Gtk.Image ();
		this.imageBaudRate.TooltipMarkup = "设置串口波特率。";
		this.imageBaudRate.Name = "imageBaudRate";
		this.imageBaudRate.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "stock_channel", global::Gtk.IconSize.Menu);
		this.tableCommBasic.Add (this.imageBaudRate);
		global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.tableCommBasic[this.imageBaudRate]));
		w4.TopAttach = ((uint)(1));
		w4.BottomAttach = ((uint)(2));
		w4.XOptions = ((global::Gtk.AttachOptions)(4));
		w4.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommBasic.Gtk.Table+TableChild
		this.imageCommSelect = new global::Gtk.Image ();
		this.imageCommSelect.TooltipMarkup = "选择您要调试的串口。";
		this.imageCommSelect.Name = "imageCommSelect";
		this.imageCommSelect.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-connect", global::Gtk.IconSize.Button);
		this.tableCommBasic.Add (this.imageCommSelect);
		global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.tableCommBasic[this.imageCommSelect]));
		w5.XOptions = ((global::Gtk.AttachOptions)(4));
		w5.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommBasic.Gtk.Table+TableChild
		this.labelBaudRate = new global::Gtk.Label ();
		this.labelBaudRate.TooltipMarkup = "设置串口波特率。";
		this.labelBaudRate.Name = "labelBaudRate";
		this.labelBaudRate.Xalign = 0f;
		this.labelBaudRate.LabelProp = global::Mono.Unix.Catalog.GetString ("波特率");
		this.tableCommBasic.Add (this.labelBaudRate);
		global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.tableCommBasic[this.labelBaudRate]));
		w6.TopAttach = ((uint)(1));
		w6.BottomAttach = ((uint)(2));
		w6.LeftAttach = ((uint)(1));
		w6.RightAttach = ((uint)(2));
		w6.XOptions = ((global::Gtk.AttachOptions)(4));
		w6.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommBasic.Gtk.Table+TableChild
		this.labelCommSelect = new global::Gtk.Label ();
		this.labelCommSelect.TooltipMarkup = "选择您要调试的串口。";
		this.labelCommSelect.Name = "labelCommSelect";
		this.labelCommSelect.LabelProp = global::Mono.Unix.Catalog.GetString ("串口选择");
		this.tableCommBasic.Add (this.labelCommSelect);
		global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.tableCommBasic[this.labelCommSelect]));
		w7.LeftAttach = ((uint)(1));
		w7.RightAttach = ((uint)(2));
		w7.XOptions = ((global::Gtk.AttachOptions)(4));
		w7.YOptions = ((global::Gtk.AttachOptions)(4));
		this.tableCommSetBasic.Add (this.tableCommBasic);
		global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.tableCommSetBasic[this.tableCommBasic]));
		w8.YOptions = ((global::Gtk.AttachOptions)(4));
		this.vboxCommSet.Add (this.tableCommSetBasic);
		global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vboxCommSet[this.tableCommSetBasic]));
		w9.Position = 0;
		w9.Expand = false;
		w9.Fill = false;
		// Container child vboxCommSet.Gtk.Box+BoxChild
		this.expanderSetComm = new global::Gtk.Expander (null);
		this.expanderSetComm.CanFocus = true;
		this.expanderSetComm.Name = "expanderSetComm";
		this.expanderSetComm.Expanded = true;
		// Container child expanderSetComm.Gtk.Container+ContainerChild
		this.tableCommSet = new global::Gtk.Table (((uint)(1)), ((uint)(5)), false);
		this.tableCommSet.Name = "tableCommSet";
		this.tableCommSet.RowSpacing = ((uint)(6));
		this.tableCommSet.ColumnSpacing = ((uint)(6));
		// Container child tableCommSet.Gtk.Table+TableChild
		this.tableCommSetDataBits = new global::Gtk.Table (((uint)(2)), ((uint)(1)), false);
		this.tableCommSetDataBits.Name = "tableCommSetDataBits";
		this.tableCommSetDataBits.RowSpacing = ((uint)(6));
		this.tableCommSetDataBits.ColumnSpacing = ((uint)(6));
		// Container child tableCommSetDataBits.Gtk.Table+TableChild
		this.labelDataBits = new global::Gtk.Label ();
		this.labelDataBits.Name = "labelDataBits";
		this.labelDataBits.LabelProp = global::Mono.Unix.Catalog.GetString ("数据位");
		this.tableCommSetDataBits.Add (this.labelDataBits);
		global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.tableCommSetDataBits[this.labelDataBits]));
		w10.XOptions = ((global::Gtk.AttachOptions)(4));
		w10.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommSetDataBits.Gtk.Table+TableChild
		this.spinbuttonDataBits = new global::Gtk.SpinButton (0, 100, 1);
		this.spinbuttonDataBits.CanFocus = true;
		this.spinbuttonDataBits.Name = "spinbuttonDataBits";
		this.spinbuttonDataBits.Adjustment.PageIncrement = 10;
		this.spinbuttonDataBits.ClimbRate = 1;
		this.spinbuttonDataBits.Numeric = true;
		this.spinbuttonDataBits.Value = 8;
		this.tableCommSetDataBits.Add (this.spinbuttonDataBits);
		global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.tableCommSetDataBits[this.spinbuttonDataBits]));
		w11.TopAttach = ((uint)(1));
		w11.BottomAttach = ((uint)(2));
		w11.XOptions = ((global::Gtk.AttachOptions)(4));
		w11.YOptions = ((global::Gtk.AttachOptions)(4));
		this.tableCommSet.Add (this.tableCommSetDataBits);
		global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.tableCommSet[this.tableCommSetDataBits]));
		w12.LeftAttach = ((uint)(2));
		w12.RightAttach = ((uint)(3));
		w12.XOptions = ((global::Gtk.AttachOptions)(4));
		w12.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommSet.Gtk.Table+TableChild
		this.tableCommSetParity = new global::Gtk.Table (((uint)(2)), ((uint)(1)), false);
		this.tableCommSetParity.Name = "tableCommSetParity";
		this.tableCommSetParity.RowSpacing = ((uint)(6));
		this.tableCommSetParity.ColumnSpacing = ((uint)(6));
		// Container child tableCommSetParity.Gtk.Table+TableChild
		this.comboboxPatity = global::Gtk.ComboBox.NewText ();
		this.comboboxPatity.AppendText (global::Mono.Unix.Catalog.GetString ("None"));
		this.comboboxPatity.AppendText (global::Mono.Unix.Catalog.GetString ("Even"));
		this.comboboxPatity.AppendText (global::Mono.Unix.Catalog.GetString ("Odd"));
		this.comboboxPatity.AppendText (global::Mono.Unix.Catalog.GetString ("Mark"));
		this.comboboxPatity.AppendText (global::Mono.Unix.Catalog.GetString ("Space"));
		this.comboboxPatity.Name = "comboboxPatity";
		this.comboboxPatity.Active = 0;
		this.tableCommSetParity.Add (this.comboboxPatity);
		global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.tableCommSetParity[this.comboboxPatity]));
		w13.TopAttach = ((uint)(1));
		w13.BottomAttach = ((uint)(2));
		w13.XOptions = ((global::Gtk.AttachOptions)(4));
		w13.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommSetParity.Gtk.Table+TableChild
		this.labelParity = new global::Gtk.Label ();
		this.labelParity.Name = "labelParity";
		this.labelParity.LabelProp = global::Mono.Unix.Catalog.GetString ("校验");
		this.tableCommSetParity.Add (this.labelParity);
		global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.tableCommSetParity[this.labelParity]));
		w14.XOptions = ((global::Gtk.AttachOptions)(4));
		w14.YOptions = ((global::Gtk.AttachOptions)(4));
		this.tableCommSet.Add (this.tableCommSetParity);
		global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.tableCommSet[this.tableCommSetParity]));
		w15.XOptions = ((global::Gtk.AttachOptions)(4));
		w15.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommSet.Gtk.Table+TableChild
		this.tableCommSetStopBits = new global::Gtk.Table (((uint)(2)), ((uint)(1)), false);
		this.tableCommSetStopBits.Name = "tableCommSetStopBits";
		this.tableCommSetStopBits.RowSpacing = ((uint)(6));
		this.tableCommSetStopBits.ColumnSpacing = ((uint)(6));
		// Container child tableCommSetStopBits.Gtk.Table+TableChild
		this.comboboxStopBits = global::Gtk.ComboBox.NewText ();
		this.comboboxStopBits.AppendText (global::Mono.Unix.Catalog.GetString ("None"));
		this.comboboxStopBits.AppendText (global::Mono.Unix.Catalog.GetString ("1"));
		this.comboboxStopBits.AppendText (global::Mono.Unix.Catalog.GetString ("1.5"));
		this.comboboxStopBits.AppendText (global::Mono.Unix.Catalog.GetString ("2"));
		this.comboboxStopBits.Name = "comboboxStopBits";
		this.comboboxStopBits.Active = 1;
		this.tableCommSetStopBits.Add (this.comboboxStopBits);
		global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.tableCommSetStopBits[this.comboboxStopBits]));
		w16.TopAttach = ((uint)(1));
		w16.BottomAttach = ((uint)(2));
		w16.XOptions = ((global::Gtk.AttachOptions)(4));
		w16.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommSetStopBits.Gtk.Table+TableChild
		this.labelStopBits = new global::Gtk.Label ();
		this.labelStopBits.Name = "labelStopBits";
		this.labelStopBits.LabelProp = global::Mono.Unix.Catalog.GetString ("停止位");
		this.tableCommSetStopBits.Add (this.labelStopBits);
		global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.tableCommSetStopBits[this.labelStopBits]));
		w17.XOptions = ((global::Gtk.AttachOptions)(4));
		w17.YOptions = ((global::Gtk.AttachOptions)(4));
		this.tableCommSet.Add (this.tableCommSetStopBits);
		global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.tableCommSet[this.tableCommSetStopBits]));
		w18.LeftAttach = ((uint)(4));
		w18.RightAttach = ((uint)(5));
		w18.XOptions = ((global::Gtk.AttachOptions)(4));
		w18.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommSet.Gtk.Table+TableChild
		this.vseparatorCommSetL = new global::Gtk.VSeparator ();
		this.vseparatorCommSetL.Name = "vseparatorCommSetL";
		this.tableCommSet.Add (this.vseparatorCommSetL);
		global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.tableCommSet[this.vseparatorCommSetL]));
		w19.LeftAttach = ((uint)(1));
		w19.RightAttach = ((uint)(2));
		w19.XOptions = ((global::Gtk.AttachOptions)(4));
		w19.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableCommSet.Gtk.Table+TableChild
		this.vseparatorCommSetR = new global::Gtk.VSeparator ();
		this.vseparatorCommSetR.Name = "vseparatorCommSetR";
		this.tableCommSet.Add (this.vseparatorCommSetR);
		global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.tableCommSet[this.vseparatorCommSetR]));
		w20.LeftAttach = ((uint)(3));
		w20.RightAttach = ((uint)(4));
		w20.XOptions = ((global::Gtk.AttachOptions)(4));
		w20.YOptions = ((global::Gtk.AttachOptions)(4));
		this.expanderSetComm.Add (this.tableCommSet);
		this.GtkLabelCommAdvanced = new global::Gtk.Label ();
		this.GtkLabelCommAdvanced.TooltipMarkup = "详细设置串口参数。";
		this.GtkLabelCommAdvanced.Name = "GtkLabelCommAdvanced";
		this.GtkLabelCommAdvanced.LabelProp = global::Mono.Unix.Catalog.GetString ("详细设置");
		this.GtkLabelCommAdvanced.UseUnderline = true;
		this.expanderSetComm.LabelWidget = this.GtkLabelCommAdvanced;
		this.vboxCommSet.Add (this.expanderSetComm);
		global::Gtk.Box.BoxChild w22 = ((global::Gtk.Box.BoxChild)(this.vboxCommSet[this.expanderSetComm]));
		w22.Position = 1;
		w22.Expand = false;
		w22.Fill = false;
		// Container child vboxCommSet.Gtk.Box+BoxChild
		this.tableComm = new global::Gtk.Table (((uint)(1)), ((uint)(2)), false);
		this.tableComm.Name = "tableComm";
		this.tableComm.RowSpacing = ((uint)(6));
		this.tableComm.ColumnSpacing = ((uint)(6));
		// Container child tableComm.Gtk.Table+TableChild
		this.labelPortState = new global::Gtk.Label ();
		this.labelPortState.Name = "labelPortState";
		this.labelPortState.Xalign = 0f;
		this.labelPortState.LabelProp = global::Mono.Unix.Catalog.GetString ("串口关");
		this.tableComm.Add (this.labelPortState);
		global::Gtk.Table.TableChild w23 = ((global::Gtk.Table.TableChild)(this.tableComm[this.labelPortState]));
		w23.LeftAttach = ((uint)(1));
		w23.RightAttach = ((uint)(2));
		w23.XOptions = ((global::Gtk.AttachOptions)(4));
		w23.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableComm.Gtk.Table+TableChild
		this.togglebuttonPortSwitch = new global::Gtk.ToggleButton ();
		this.togglebuttonPortSwitch.CanFocus = true;
		this.togglebuttonPortSwitch.Name = "togglebuttonPortSwitch";
		this.togglebuttonPortSwitch.UseUnderline = true;
		this.togglebuttonPortSwitch.Label = global::Mono.Unix.Catalog.GetString ("打开串口(_O)");
		this.tableComm.Add (this.togglebuttonPortSwitch);
		global::Gtk.Table.TableChild w24 = ((global::Gtk.Table.TableChild)(this.tableComm[this.togglebuttonPortSwitch]));
		w24.YOptions = ((global::Gtk.AttachOptions)(4));
		this.vboxCommSet.Add (this.tableComm);
		global::Gtk.Box.BoxChild w25 = ((global::Gtk.Box.BoxChild)(this.vboxCommSet[this.tableComm]));
		w25.PackType = ((global::Gtk.PackType)(1));
		w25.Position = 2;
		w25.Expand = false;
		w25.Fill = false;
		this.alignmentCommSet.Add (this.vboxCommSet);
		this.expanderCommSet.Add (this.alignmentCommSet);
		this.GtkLabelCommSet = new global::Gtk.Label ();
		this.GtkLabelCommSet.TooltipMarkup = "设置串口参数。";
		this.GtkLabelCommSet.Name = "GtkLabelCommSet";
		this.GtkLabelCommSet.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>串口设置</b>");
		this.GtkLabelCommSet.UseMarkup = true;
		this.GtkLabelCommSet.UseUnderline = true;
		this.expanderCommSet.LabelWidget = this.GtkLabelCommSet;
		this.vboxLeft.Add (this.expanderCommSet);
		global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.vboxLeft[this.expanderCommSet]));
		w28.Position = 0;
		w28.Expand = false;
		w28.Fill = false;
		// Container child vboxLeft.Gtk.Box+BoxChild
		this.hseparatorLeftA = new global::Gtk.HSeparator ();
		this.hseparatorLeftA.Name = "hseparatorLeftA";
		this.vboxLeft.Add (this.hseparatorLeftA);
		global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.vboxLeft[this.hseparatorLeftA]));
		w29.Position = 1;
		w29.Expand = false;
		w29.Fill = false;
		// Container child vboxLeft.Gtk.Box+BoxChild
		this.expanderSendSet = new global::Gtk.Expander (null);
		this.expanderSendSet.CanFocus = true;
		this.expanderSendSet.Name = "expanderSendSet";
		this.expanderSendSet.Expanded = true;
		// Container child expanderSendSet.Gtk.Container+ContainerChild
		this.alignmentSendSetExpan = new global::Gtk.Alignment (0.5f, 0.5f, 1f, 1f);
		this.alignmentSendSetExpan.Name = "alignmentSendSetExpan";
		// Container child alignmentSendSetExpan.Gtk.Container+ContainerChild
		this.GtkAlignmentSendSet = new global::Gtk.Alignment (0f, 0f, 1f, 1f);
		this.GtkAlignmentSendSet.Name = "GtkAlignmentSendSet";
		this.GtkAlignmentSendSet.LeftPadding = ((uint)(12));
		// Container child GtkAlignmentSendSet.Gtk.Container+ContainerChild
		this.tableSendSet = new global::Gtk.Table (((uint)(2)), ((uint)(1)), false);
		this.tableSendSet.Name = "tableSendSet";
		this.tableSendSet.RowSpacing = ((uint)(6));
		this.tableSendSet.ColumnSpacing = ((uint)(6));
		// Container child tableSendSet.Gtk.Table+TableChild
		this.expanderAutoSend = new global::Gtk.Expander (null);
		this.expanderAutoSend.CanFocus = true;
		this.expanderAutoSend.Name = "expanderAutoSend";
		this.expanderAutoSend.Expanded = true;
		// Container child expanderAutoSend.Gtk.Container+ContainerChild
		this.tableAutoSend = new global::Gtk.Table (((uint)(1)), ((uint)(4)), false);
		this.tableAutoSend.Name = "tableAutoSend";
		this.tableAutoSend.RowSpacing = ((uint)(6));
		this.tableAutoSend.ColumnSpacing = ((uint)(6));
		// Container child tableAutoSend.Gtk.Table+TableChild
		this.checkbuttonAutoSend = new global::Gtk.CheckButton ();
		this.checkbuttonAutoSend.CanFocus = true;
		this.checkbuttonAutoSend.Name = "checkbuttonAutoSend";
		this.checkbuttonAutoSend.Label = global::Mono.Unix.Catalog.GetString ("自动发送");
		this.checkbuttonAutoSend.DrawIndicator = true;
		this.checkbuttonAutoSend.UseUnderline = true;
		this.tableAutoSend.Add (this.checkbuttonAutoSend);
		global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.tableAutoSend[this.checkbuttonAutoSend]));
		w30.XOptions = ((global::Gtk.AttachOptions)(4));
		w30.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableAutoSend.Gtk.Table+TableChild
		this.labelSetInterval = new global::Gtk.Label ();
		this.labelSetInterval.Name = "labelSetInterval";
		this.labelSetInterval.LabelProp = global::Mono.Unix.Catalog.GetString ("定时");
		this.tableAutoSend.Add (this.labelSetInterval);
		global::Gtk.Table.TableChild w31 = ((global::Gtk.Table.TableChild)(this.tableAutoSend[this.labelSetInterval]));
		w31.LeftAttach = ((uint)(1));
		w31.RightAttach = ((uint)(2));
		w31.XOptions = ((global::Gtk.AttachOptions)(4));
		w31.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableAutoSend.Gtk.Table+TableChild
		this.labelSetIntervalms = new global::Gtk.Label ();
		this.labelSetIntervalms.Name = "labelSetIntervalms";
		this.labelSetIntervalms.LabelProp = global::Mono.Unix.Catalog.GetString ("ms");
		this.tableAutoSend.Add (this.labelSetIntervalms);
		global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.tableAutoSend[this.labelSetIntervalms]));
		w32.LeftAttach = ((uint)(3));
		w32.RightAttach = ((uint)(4));
		w32.XOptions = ((global::Gtk.AttachOptions)(4));
		w32.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableAutoSend.Gtk.Table+TableChild
		this.spinbuttonInterval = new global::Gtk.SpinButton (0.01, 10000, 0.01);
		this.spinbuttonInterval.TooltipMarkup = "设定自动发送的间隔时间，\n单位是毫秒(ms)。";
		this.spinbuttonInterval.CanFocus = true;
		this.spinbuttonInterval.Name = "spinbuttonInterval";
		this.spinbuttonInterval.Adjustment.PageIncrement = 10;
		this.spinbuttonInterval.ClimbRate = 1;
		this.spinbuttonInterval.Numeric = true;
		this.spinbuttonInterval.Value = 500;
		this.tableAutoSend.Add (this.spinbuttonInterval);
		global::Gtk.Table.TableChild w33 = ((global::Gtk.Table.TableChild)(this.tableAutoSend[this.spinbuttonInterval]));
		w33.LeftAttach = ((uint)(2));
		w33.RightAttach = ((uint)(3));
		w33.YOptions = ((global::Gtk.AttachOptions)(4));
		this.expanderAutoSend.Add (this.tableAutoSend);
		this.GtkLabelAutoSend = new global::Gtk.Label ();
		this.GtkLabelAutoSend.Name = "GtkLabelAutoSend";
		this.GtkLabelAutoSend.LabelProp = global::Mono.Unix.Catalog.GetString ("自动发送设置");
		this.GtkLabelAutoSend.UseUnderline = true;
		this.expanderAutoSend.LabelWidget = this.GtkLabelAutoSend;
		this.tableSendSet.Add (this.expanderAutoSend);
		global::Gtk.Table.TableChild w35 = ((global::Gtk.Table.TableChild)(this.tableSendSet[this.expanderAutoSend]));
		w35.TopAttach = ((uint)(1));
		w35.BottomAttach = ((uint)(2));
		w35.XOptions = ((global::Gtk.AttachOptions)(4));
		w35.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableSendSet.Gtk.Table+TableChild
		this.expanderSendContents = new global::Gtk.Expander (null);
		this.expanderSendContents.CanFocus = true;
		this.expanderSendContents.Name = "expanderSendContents";
		this.expanderSendContents.Expanded = true;
		// Container child expanderSendContents.Gtk.Container+ContainerChild
		this.tableSendContents = new global::Gtk.Table (((uint)(1)), ((uint)(2)), false);
		this.tableSendContents.Name = "tableSendContents";
		this.tableSendContents.RowSpacing = ((uint)(6));
		this.tableSendContents.ColumnSpacing = ((uint)(6));
		// Container child tableSendContents.Gtk.Table+TableChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.HeightRequest = 60;
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.textviewSend = new global::Gtk.TextView ();
		this.textviewSend.CanFocus = true;
		this.textviewSend.Name = "textviewSend";
		this.textviewSend.WrapMode = ((global::Gtk.WrapMode)(3));
		this.GtkScrolledWindow.Add (this.textviewSend);
		this.tableSendContents.Add (this.GtkScrolledWindow);
		global::Gtk.Table.TableChild w37 = ((global::Gtk.Table.TableChild)(this.tableSendContents[this.GtkScrolledWindow]));
		w37.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableSendContents.Gtk.Table+TableChild
		this.tableSendContentsSet = new global::Gtk.Table (((uint)(4)), ((uint)(1)), false);
		this.tableSendContentsSet.Name = "tableSendContentsSet";
		this.tableSendContentsSet.RowSpacing = ((uint)(6));
		this.tableSendContentsSet.ColumnSpacing = ((uint)(6));
		// Container child tableSendContentsSet.Gtk.Table+TableChild
		this.buttonSend = new global::Gtk.Button ();
		this.buttonSend.CanFocus = true;
		this.buttonSend.Name = "buttonSend";
		this.buttonSend.UseUnderline = true;
		// Container child buttonSend.Gtk.Container+ContainerChild
		global::Gtk.Alignment w38 = new global::Gtk.Alignment (0.5f, 0.5f, 0f, 0f);
		// Container child GtkAlignment.Gtk.Container+ContainerChild
		global::Gtk.HBox w39 = new global::Gtk.HBox ();
		w39.Spacing = 2;
		// Container child GtkHBox.Gtk.Container+ContainerChild
		global::Gtk.Image w40 = new global::Gtk.Image ();
		w40.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "stock_draw-connector-ends-with-arrow", global::Gtk.IconSize.Menu);
		w39.Add (w40);
		// Container child GtkHBox.Gtk.Container+ContainerChild
		global::Gtk.Label w42 = new global::Gtk.Label ();
		w42.LabelProp = global::Mono.Unix.Catalog.GetString ("发送");
		w42.UseUnderline = true;
		w39.Add (w42);
		w38.Add (w39);
		this.buttonSend.Add (w38);
		this.tableSendContentsSet.Add (this.buttonSend);
		global::Gtk.Table.TableChild w46 = ((global::Gtk.Table.TableChild)(this.tableSendContentsSet[this.buttonSend]));
		w46.TopAttach = ((uint)(3));
		w46.BottomAttach = ((uint)(4));
		w46.XOptions = ((global::Gtk.AttachOptions)(4));
		w46.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableSendContentsSet.Gtk.Table+TableChild
		this.radiobuttonDec = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("10进制"));
		this.radiobuttonDec.CanFocus = true;
		this.radiobuttonDec.Name = "radiobuttonDec";
		this.radiobuttonDec.DrawIndicator = true;
		this.radiobuttonDec.UseUnderline = true;
		this.radiobuttonDec.Group = new global::GLib.SList (global::System.IntPtr.Zero);
		this.tableSendContentsSet.Add (this.radiobuttonDec);
		global::Gtk.Table.TableChild w47 = ((global::Gtk.Table.TableChild)(this.tableSendContentsSet[this.radiobuttonDec]));
		w47.TopAttach = ((uint)(2));
		w47.BottomAttach = ((uint)(3));
		w47.XOptions = ((global::Gtk.AttachOptions)(4));
		w47.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableSendContentsSet.Gtk.Table+TableChild
		this.radiobuttonHex = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("16进制"));
		this.radiobuttonHex.CanFocus = true;
		this.radiobuttonHex.Name = "radiobuttonHex";
		this.radiobuttonHex.DrawIndicator = true;
		this.radiobuttonHex.UseUnderline = true;
		this.radiobuttonHex.Group = this.radiobuttonDec.Group;
		this.tableSendContentsSet.Add (this.radiobuttonHex);
		global::Gtk.Table.TableChild w48 = ((global::Gtk.Table.TableChild)(this.tableSendContentsSet[this.radiobuttonHex]));
		w48.TopAttach = ((uint)(1));
		w48.BottomAttach = ((uint)(2));
		w48.XOptions = ((global::Gtk.AttachOptions)(4));
		w48.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableSendContentsSet.Gtk.Table+TableChild
		this.radiobuttonText = new global::Gtk.RadioButton (global::Mono.Unix.Catalog.GetString ("文本"));
		this.radiobuttonText.CanFocus = true;
		this.radiobuttonText.Name = "radiobuttonText";
		this.radiobuttonText.DrawIndicator = true;
		this.radiobuttonText.UseUnderline = true;
		this.radiobuttonText.Group = this.radiobuttonDec.Group;
		this.tableSendContentsSet.Add (this.radiobuttonText);
		global::Gtk.Table.TableChild w49 = ((global::Gtk.Table.TableChild)(this.tableSendContentsSet[this.radiobuttonText]));
		w49.XOptions = ((global::Gtk.AttachOptions)(4));
		w49.YOptions = ((global::Gtk.AttachOptions)(4));
		this.tableSendContents.Add (this.tableSendContentsSet);
		global::Gtk.Table.TableChild w50 = ((global::Gtk.Table.TableChild)(this.tableSendContents[this.tableSendContentsSet]));
		w50.LeftAttach = ((uint)(1));
		w50.RightAttach = ((uint)(2));
		w50.XOptions = ((global::Gtk.AttachOptions)(4));
		w50.YOptions = ((global::Gtk.AttachOptions)(4));
		this.expanderSendContents.Add (this.tableSendContents);
		this.GtkLabelSendContents = new global::Gtk.Label ();
		this.GtkLabelSendContents.Name = "GtkLabelSendContents";
		this.GtkLabelSendContents.LabelProp = global::Mono.Unix.Catalog.GetString ("发送内容设置");
		this.GtkLabelSendContents.UseUnderline = true;
		this.expanderSendContents.LabelWidget = this.GtkLabelSendContents;
		this.tableSendSet.Add (this.expanderSendContents);
		global::Gtk.Table.TableChild w52 = ((global::Gtk.Table.TableChild)(this.tableSendSet[this.expanderSendContents]));
		w52.YOptions = ((global::Gtk.AttachOptions)(4));
		this.GtkAlignmentSendSet.Add (this.tableSendSet);
		this.alignmentSendSetExpan.Add (this.GtkAlignmentSendSet);
		this.expanderSendSet.Add (this.alignmentSendSetExpan);
		this.GtkLabelSendSet = new global::Gtk.Label ();
		this.GtkLabelSendSet.Name = "GtkLabelSendSet";
		this.GtkLabelSendSet.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>发送设置</b>");
		this.GtkLabelSendSet.UseMarkup = true;
		this.GtkLabelSendSet.UseUnderline = true;
		this.expanderSendSet.LabelWidget = this.GtkLabelSendSet;
		this.vboxLeft.Add (this.expanderSendSet);
		global::Gtk.Box.BoxChild w56 = ((global::Gtk.Box.BoxChild)(this.vboxLeft[this.expanderSendSet]));
		w56.Position = 2;
		w56.Expand = false;
		w56.Fill = false;
		// Container child vboxLeft.Gtk.Box+BoxChild
		this.hseparatorLeftB = new global::Gtk.HSeparator ();
		this.hseparatorLeftB.Name = "hseparatorLeftB";
		this.vboxLeft.Add (this.hseparatorLeftB);
		global::Gtk.Box.BoxChild w57 = ((global::Gtk.Box.BoxChild)(this.vboxLeft[this.hseparatorLeftB]));
		w57.Position = 3;
		w57.Expand = false;
		w57.Fill = false;
		// Container child vboxLeft.Gtk.Box+BoxChild
		this.expanderAbout = new global::Gtk.Expander (null);
		this.expanderAbout.CanFocus = true;
		this.expanderAbout.Name = "expanderAbout";
		// Container child expanderAbout.Gtk.Container+ContainerChild
		this.tableAbout = new global::Gtk.Table (((uint)(1)), ((uint)(1)), false);
		this.tableAbout.Name = "tableAbout";
		this.tableAbout.RowSpacing = ((uint)(6));
		this.tableAbout.ColumnSpacing = ((uint)(6));
		// Container child tableAbout.Gtk.Table+TableChild
		this.labelAbout = new global::Gtk.Label ();
		this.labelAbout.Name = "labelAbout";
		this.labelAbout.LabelProp = global::Mono.Unix.Catalog.GetString ("关于串口调试助手\n作者：黄锐\n日期：2010-08-03\nvowstar@gmail.com\n");
		this.tableAbout.Add (this.labelAbout);
		global::Gtk.Table.TableChild w58 = ((global::Gtk.Table.TableChild)(this.tableAbout[this.labelAbout]));
		w58.YOptions = ((global::Gtk.AttachOptions)(4));
		this.expanderAbout.Add (this.tableAbout);
		this.GtkLabelAbout = new global::Gtk.Label ();
		this.GtkLabelAbout.Name = "GtkLabelAbout";
		this.GtkLabelAbout.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>关于</b>");
		this.GtkLabelAbout.UseMarkup = true;
		this.GtkLabelAbout.UseUnderline = true;
		this.expanderAbout.LabelWidget = this.GtkLabelAbout;
		this.vboxLeft.Add (this.expanderAbout);
		global::Gtk.Box.BoxChild w60 = ((global::Gtk.Box.BoxChild)(this.vboxLeft[this.expanderAbout]));
		w60.Position = 4;
		w60.Expand = false;
		w60.Fill = false;
		this.hpanedMain.Add (this.vboxLeft);
		global::Gtk.Paned.PanedChild w61 = ((global::Gtk.Paned.PanedChild)(this.hpanedMain[this.vboxLeft]));
		w61.Resize = false;
		// Container child hpanedMain.Gtk.Paned+PanedChild
		this.vpanedRight = new global::Gtk.VPaned ();
		this.vpanedRight.CanFocus = true;
		this.vpanedRight.Name = "vpanedRight";
		this.vpanedRight.Position = 277;
		// Container child vpanedRight.Gtk.Paned+PanedChild
		this.vboxReceiveArea = new global::Gtk.VBox ();
		this.vboxReceiveArea.Name = "vboxReceiveArea";
		this.vboxReceiveArea.Spacing = 6;
		// Container child vboxReceiveArea.Gtk.Box+BoxChild
		this.frameReceiveArea = new global::Gtk.Frame ();
		this.frameReceiveArea.Name = "frameReceiveArea";
		this.frameReceiveArea.ShadowType = ((global::Gtk.ShadowType)(0));
		// Container child frameReceiveArea.Gtk.Container+ContainerChild
		this.GtkAlignmentReceiveArea = new global::Gtk.Alignment (0f, 0f, 1f, 1f);
		this.GtkAlignmentReceiveArea.Name = "GtkAlignmentReceiveArea";
		this.GtkAlignmentReceiveArea.LeftPadding = ((uint)(12));
		// Container child GtkAlignmentReceiveArea.Gtk.Container+ContainerChild
		this.notebookReceiveArea = new global::Gtk.Notebook ();
		this.notebookReceiveArea.CanFocus = true;
		this.notebookReceiveArea.Name = "notebookReceiveArea";
		this.notebookReceiveArea.CurrentPage = 2;
		// Container child notebookReceiveArea.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindowText = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindowText.Name = "GtkScrolledWindowText";
		this.GtkScrolledWindowText.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindowText.Gtk.Container+ContainerChild
		this.textviewText = new global::Gtk.TextView ();
		this.textviewText.CanFocus = true;
		this.textviewText.Name = "textviewText";
		this.textviewText.Editable = false;
		this.textviewText.WrapMode = ((global::Gtk.WrapMode)(3));
		this.GtkScrolledWindowText.Add (this.textviewText);
		this.notebookReceiveArea.Add (this.GtkScrolledWindowText);
		// Notebook tab
		this.labelRText = new global::Gtk.Label ();
		this.labelRText.Name = "labelRText";
		this.labelRText.LabelProp = global::Mono.Unix.Catalog.GetString ("文本");
		this.notebookReceiveArea.SetTabLabel (this.GtkScrolledWindowText, this.labelRText);
		this.labelRText.ShowAll ();
		// Container child notebookReceiveArea.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindowHex = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindowHex.Name = "GtkScrolledWindowHex";
		this.GtkScrolledWindowHex.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindowHex.Gtk.Container+ContainerChild
		this.textviewHex = new global::Gtk.TextView ();
		this.textviewHex.CanFocus = true;
		this.textviewHex.Name = "textviewHex";
		this.textviewHex.Editable = false;
		this.textviewHex.WrapMode = ((global::Gtk.WrapMode)(3));
		this.GtkScrolledWindowHex.Add (this.textviewHex);
		this.notebookReceiveArea.Add (this.GtkScrolledWindowHex);
		global::Gtk.Notebook.NotebookChild w65 = ((global::Gtk.Notebook.NotebookChild)(this.notebookReceiveArea[this.GtkScrolledWindowHex]));
		w65.Position = 1;
		// Notebook tab
		this.labelRHex = new global::Gtk.Label ();
		this.labelRHex.Name = "labelRHex";
		this.labelRHex.LabelProp = global::Mono.Unix.Catalog.GetString ("十六进制");
		this.notebookReceiveArea.SetTabLabel (this.GtkScrolledWindowHex, this.labelRHex);
		this.labelRHex.ShowAll ();
		// Container child notebookReceiveArea.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindowDec = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindowDec.Name = "GtkScrolledWindowDec";
		this.GtkScrolledWindowDec.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindowDec.Gtk.Container+ContainerChild
		this.textviewDec = new global::Gtk.TextView ();
		this.textviewDec.CanFocus = true;
		this.textviewDec.Name = "textviewDec";
		this.textviewDec.Editable = false;
		this.textviewDec.WrapMode = ((global::Gtk.WrapMode)(3));
		this.GtkScrolledWindowDec.Add (this.textviewDec);
		this.notebookReceiveArea.Add (this.GtkScrolledWindowDec);
		global::Gtk.Notebook.NotebookChild w67 = ((global::Gtk.Notebook.NotebookChild)(this.notebookReceiveArea[this.GtkScrolledWindowDec]));
		w67.Position = 2;
		// Notebook tab
		this.labelRDec = new global::Gtk.Label ();
		this.labelRDec.Name = "labelRDec";
		this.labelRDec.LabelProp = global::Mono.Unix.Catalog.GetString ("十进制");
		this.notebookReceiveArea.SetTabLabel (this.GtkScrolledWindowDec, this.labelRDec);
		this.labelRDec.ShowAll ();
		this.GtkAlignmentReceiveArea.Add (this.notebookReceiveArea);
		this.frameReceiveArea.Add (this.GtkAlignmentReceiveArea);
		this.GtkLabelR = new global::Gtk.Label ();
		this.GtkLabelR.Name = "GtkLabelR";
		this.GtkLabelR.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>接收到的数据</b>");
		this.GtkLabelR.UseMarkup = true;
		this.frameReceiveArea.LabelWidget = this.GtkLabelR;
		this.vboxReceiveArea.Add (this.frameReceiveArea);
		global::Gtk.Box.BoxChild w70 = ((global::Gtk.Box.BoxChild)(this.vboxReceiveArea[this.frameReceiveArea]));
		w70.Position = 0;
		// Container child vboxReceiveArea.Gtk.Box+BoxChild
		this.expanderDataShowSet = new global::Gtk.Expander (null);
		this.expanderDataShowSet.CanFocus = true;
		this.expanderDataShowSet.Name = "expanderDataShowSet";
		this.expanderDataShowSet.Expanded = true;
		// Container child expanderDataShowSet.Gtk.Container+ContainerChild
		this.alignmentClear = new global::Gtk.Alignment (0f, 0f, 1f, 1f);
		this.alignmentClear.Name = "alignmentClear";
		this.alignmentClear.LeftPadding = ((uint)(12));
		// Container child alignmentClear.Gtk.Container+ContainerChild
		this.tableDataShowSet = new global::Gtk.Table (((uint)(2)), ((uint)(1)), false);
		this.tableDataShowSet.Name = "tableDataShowSet";
		this.tableDataShowSet.RowSpacing = ((uint)(6));
		this.tableDataShowSet.ColumnSpacing = ((uint)(6));
		// Container child tableDataShowSet.Gtk.Table+TableChild
		this.tableScrollSet = new global::Gtk.Table (((uint)(1)), ((uint)(3)), false);
		this.tableScrollSet.Name = "tableScrollSet";
		this.tableScrollSet.RowSpacing = ((uint)(6));
		this.tableScrollSet.ColumnSpacing = ((uint)(6));
		// Container child tableScrollSet.Gtk.Table+TableChild
		this.checkbuttonAutoScrollReceive = new global::Gtk.CheckButton ();
		this.checkbuttonAutoScrollReceive.CanFocus = true;
		this.checkbuttonAutoScrollReceive.Name = "checkbuttonAutoScrollReceive";
		this.checkbuttonAutoScrollReceive.Label = global::Mono.Unix.Catalog.GetString ("接收区自动滚屏");
		this.checkbuttonAutoScrollReceive.Active = true;
		this.checkbuttonAutoScrollReceive.DrawIndicator = true;
		this.checkbuttonAutoScrollReceive.UseUnderline = true;
		this.tableScrollSet.Add (this.checkbuttonAutoScrollReceive);
		global::Gtk.Table.TableChild w71 = ((global::Gtk.Table.TableChild)(this.tableScrollSet[this.checkbuttonAutoScrollReceive]));
		w71.LeftAttach = ((uint)(1));
		w71.RightAttach = ((uint)(2));
		w71.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableScrollSet.Gtk.Table+TableChild
		this.checkbuttonAutoScrollSend = new global::Gtk.CheckButton ();
		this.checkbuttonAutoScrollSend.CanFocus = true;
		this.checkbuttonAutoScrollSend.Name = "checkbuttonAutoScrollSend";
		this.checkbuttonAutoScrollSend.Label = global::Mono.Unix.Catalog.GetString ("发送区自动滚屏");
		this.checkbuttonAutoScrollSend.Active = true;
		this.checkbuttonAutoScrollSend.DrawIndicator = true;
		this.checkbuttonAutoScrollSend.UseUnderline = true;
		this.tableScrollSet.Add (this.checkbuttonAutoScrollSend);
		global::Gtk.Table.TableChild w72 = ((global::Gtk.Table.TableChild)(this.tableScrollSet[this.checkbuttonAutoScrollSend]));
		w72.LeftAttach = ((uint)(2));
		w72.RightAttach = ((uint)(3));
		w72.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableScrollSet.Gtk.Table+TableChild
		this.imageAutoScroll = new global::Gtk.Image ();
		this.imageAutoScroll.Name = "imageAutoScroll";
		this.imageAutoScroll.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-goto-bottom", global::Gtk.IconSize.Menu);
		this.tableScrollSet.Add (this.imageAutoScroll);
		global::Gtk.Table.TableChild w73 = ((global::Gtk.Table.TableChild)(this.tableScrollSet[this.imageAutoScroll]));
		w73.XOptions = ((global::Gtk.AttachOptions)(4));
		w73.YOptions = ((global::Gtk.AttachOptions)(4));
		this.tableDataShowSet.Add (this.tableScrollSet);
		global::Gtk.Table.TableChild w74 = ((global::Gtk.Table.TableChild)(this.tableDataShowSet[this.tableScrollSet]));
		w74.TopAttach = ((uint)(1));
		w74.BottomAttach = ((uint)(2));
		w74.XOptions = ((global::Gtk.AttachOptions)(4));
		w74.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableDataShowSet.Gtk.Table+TableChild
		this.tableShowClearSet = new global::Gtk.Table (((uint)(1)), ((uint)(3)), false);
		this.tableShowClearSet.Name = "tableShowClearSet";
		this.tableShowClearSet.RowSpacing = ((uint)(6));
		this.tableShowClearSet.ColumnSpacing = ((uint)(6));
		// Container child tableShowClearSet.Gtk.Table+TableChild
		this.buttonClearAll = new global::Gtk.Button ();
		this.buttonClearAll.CanFocus = true;
		this.buttonClearAll.Name = "buttonClearAll";
		this.buttonClearAll.UseUnderline = true;
		// Container child buttonClearAll.Gtk.Container+ContainerChild
		global::Gtk.Alignment w75 = new global::Gtk.Alignment (0.5f, 0.5f, 0f, 0f);
		// Container child GtkAlignment.Gtk.Container+ContainerChild
		global::Gtk.HBox w76 = new global::Gtk.HBox ();
		w76.Spacing = 2;
		// Container child GtkHBox.Gtk.Container+ContainerChild
		global::Gtk.Image w77 = new global::Gtk.Image ();
		w77.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-clear", global::Gtk.IconSize.Menu);
		w76.Add (w77);
		// Container child GtkHBox.Gtk.Container+ContainerChild
		global::Gtk.Label w79 = new global::Gtk.Label ();
		w79.LabelProp = global::Mono.Unix.Catalog.GetString ("全部清空(_A)");
		w79.UseUnderline = true;
		w76.Add (w79);
		w75.Add (w76);
		this.buttonClearAll.Add (w75);
		this.tableShowClearSet.Add (this.buttonClearAll);
		global::Gtk.Table.TableChild w83 = ((global::Gtk.Table.TableChild)(this.tableShowClearSet[this.buttonClearAll]));
		w83.LeftAttach = ((uint)(2));
		w83.RightAttach = ((uint)(3));
		w83.XOptions = ((global::Gtk.AttachOptions)(4));
		w83.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableShowClearSet.Gtk.Table+TableChild
		this.buttonClearReceiveArea = new global::Gtk.Button ();
		this.buttonClearReceiveArea.CanFocus = true;
		this.buttonClearReceiveArea.Name = "buttonClearReceiveArea";
		this.buttonClearReceiveArea.UseUnderline = true;
		// Container child buttonClearReceiveArea.Gtk.Container+ContainerChild
		global::Gtk.Alignment w84 = new global::Gtk.Alignment (0.5f, 0.5f, 0f, 0f);
		// Container child GtkAlignment.Gtk.Container+ContainerChild
		global::Gtk.HBox w85 = new global::Gtk.HBox ();
		w85.Spacing = 2;
		// Container child GtkHBox.Gtk.Container+ContainerChild
		global::Gtk.Image w86 = new global::Gtk.Image ();
		w86.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "stock_alignment-top", global::Gtk.IconSize.Menu);
		w85.Add (w86);
		// Container child GtkHBox.Gtk.Container+ContainerChild
		global::Gtk.Label w88 = new global::Gtk.Label ();
		w88.LabelProp = global::Mono.Unix.Catalog.GetString ("清空接收区");
		w88.UseUnderline = true;
		w85.Add (w88);
		w84.Add (w85);
		this.buttonClearReceiveArea.Add (w84);
		this.tableShowClearSet.Add (this.buttonClearReceiveArea);
		global::Gtk.Table.TableChild w92 = ((global::Gtk.Table.TableChild)(this.tableShowClearSet[this.buttonClearReceiveArea]));
		w92.XOptions = ((global::Gtk.AttachOptions)(4));
		w92.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableShowClearSet.Gtk.Table+TableChild
		this.buttonClearSendArea = new global::Gtk.Button ();
		this.buttonClearSendArea.CanFocus = true;
		this.buttonClearSendArea.Name = "buttonClearSendArea";
		this.buttonClearSendArea.UseUnderline = true;
		// Container child buttonClearSendArea.Gtk.Container+ContainerChild
		global::Gtk.Alignment w93 = new global::Gtk.Alignment (0.5f, 0.5f, 0f, 0f);
		// Container child GtkAlignment.Gtk.Container+ContainerChild
		global::Gtk.HBox w94 = new global::Gtk.HBox ();
		w94.Spacing = 2;
		// Container child GtkHBox.Gtk.Container+ContainerChild
		global::Gtk.Image w95 = new global::Gtk.Image ();
		w95.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "stock_alignment-bottom", global::Gtk.IconSize.Menu);
		w94.Add (w95);
		// Container child GtkHBox.Gtk.Container+ContainerChild
		global::Gtk.Label w97 = new global::Gtk.Label ();
		w97.LabelProp = global::Mono.Unix.Catalog.GetString ("清空发送区");
		w97.UseUnderline = true;
		w94.Add (w97);
		w93.Add (w94);
		this.buttonClearSendArea.Add (w93);
		this.tableShowClearSet.Add (this.buttonClearSendArea);
		global::Gtk.Table.TableChild w101 = ((global::Gtk.Table.TableChild)(this.tableShowClearSet[this.buttonClearSendArea]));
		w101.LeftAttach = ((uint)(1));
		w101.RightAttach = ((uint)(2));
		w101.XOptions = ((global::Gtk.AttachOptions)(4));
		w101.YOptions = ((global::Gtk.AttachOptions)(4));
		this.tableDataShowSet.Add (this.tableShowClearSet);
		global::Gtk.Table.TableChild w102 = ((global::Gtk.Table.TableChild)(this.tableDataShowSet[this.tableShowClearSet]));
		w102.XOptions = ((global::Gtk.AttachOptions)(4));
		w102.YOptions = ((global::Gtk.AttachOptions)(4));
		this.alignmentClear.Add (this.tableDataShowSet);
		this.expanderDataShowSet.Add (this.alignmentClear);
		this.GtkLabelDataShowSet = new global::Gtk.Label ();
		this.GtkLabelDataShowSet.Name = "GtkLabelDataShowSet";
		this.GtkLabelDataShowSet.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>数据显示</b>");
		this.GtkLabelDataShowSet.UseMarkup = true;
		this.GtkLabelDataShowSet.UseUnderline = true;
		this.expanderDataShowSet.LabelWidget = this.GtkLabelDataShowSet;
		this.vboxReceiveArea.Add (this.expanderDataShowSet);
		global::Gtk.Box.BoxChild w105 = ((global::Gtk.Box.BoxChild)(this.vboxReceiveArea[this.expanderDataShowSet]));
		w105.Position = 1;
		w105.Expand = false;
		w105.Fill = false;
		this.vpanedRight.Add (this.vboxReceiveArea);
		global::Gtk.Paned.PanedChild w106 = ((global::Gtk.Paned.PanedChild)(this.vpanedRight[this.vboxReceiveArea]));
		w106.Resize = false;
		// Container child vpanedRight.Gtk.Paned+PanedChild
		this.frameSendArea = new global::Gtk.Frame ();
		this.frameSendArea.Name = "frameSendArea";
		this.frameSendArea.ShadowType = ((global::Gtk.ShadowType)(0));
		// Container child frameSendArea.Gtk.Container+ContainerChild
		this.GtkAlignmentSendArea = new global::Gtk.Alignment (0f, 0f, 1f, 1f);
		this.GtkAlignmentSendArea.Name = "GtkAlignmentSendArea";
		this.GtkAlignmentSendArea.LeftPadding = ((uint)(12));
		// Container child GtkAlignmentSendArea.Gtk.Container+ContainerChild
		this.notebookSendArea = new global::Gtk.Notebook ();
		this.notebookSendArea.CanFocus = true;
		this.notebookSendArea.Name = "notebookSendArea";
		this.notebookSendArea.CurrentPage = 2;
		// Container child notebookSendArea.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindowTextS = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindowTextS.Name = "GtkScrolledWindowTextS";
		this.GtkScrolledWindowTextS.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindowTextS.Gtk.Container+ContainerChild
		this.textviewTextS = new global::Gtk.TextView ();
		this.textviewTextS.CanFocus = true;
		this.textviewTextS.Name = "textviewTextS";
		this.textviewTextS.Editable = false;
		this.textviewTextS.WrapMode = ((global::Gtk.WrapMode)(3));
		this.GtkScrolledWindowTextS.Add (this.textviewTextS);
		this.notebookSendArea.Add (this.GtkScrolledWindowTextS);
		// Notebook tab
		this.labelSText = new global::Gtk.Label ();
		this.labelSText.Name = "labelSText";
		this.labelSText.LabelProp = global::Mono.Unix.Catalog.GetString ("文本");
		this.notebookSendArea.SetTabLabel (this.GtkScrolledWindowTextS, this.labelSText);
		this.labelSText.ShowAll ();
		// Container child notebookSendArea.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindowHexS = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindowHexS.Name = "GtkScrolledWindowHexS";
		this.GtkScrolledWindowHexS.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindowHexS.Gtk.Container+ContainerChild
		this.textviewHexS = new global::Gtk.TextView ();
		this.textviewHexS.CanFocus = true;
		this.textviewHexS.Name = "textviewHexS";
		this.textviewHexS.Editable = false;
		this.textviewHexS.WrapMode = ((global::Gtk.WrapMode)(3));
		this.GtkScrolledWindowHexS.Add (this.textviewHexS);
		this.notebookSendArea.Add (this.GtkScrolledWindowHexS);
		global::Gtk.Notebook.NotebookChild w110 = ((global::Gtk.Notebook.NotebookChild)(this.notebookSendArea[this.GtkScrolledWindowHexS]));
		w110.Position = 1;
		// Notebook tab
		this.labelSHex = new global::Gtk.Label ();
		this.labelSHex.Name = "labelSHex";
		this.labelSHex.LabelProp = global::Mono.Unix.Catalog.GetString ("十六进制");
		this.notebookSendArea.SetTabLabel (this.GtkScrolledWindowHexS, this.labelSHex);
		this.labelSHex.ShowAll ();
		// Container child notebookSendArea.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindowDecS = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindowDecS.Name = "GtkScrolledWindowDecS";
		this.GtkScrolledWindowDecS.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindowDecS.Gtk.Container+ContainerChild
		this.textviewDecS = new global::Gtk.TextView ();
		this.textviewDecS.CanFocus = true;
		this.textviewDecS.Name = "textviewDecS";
		this.textviewDecS.Editable = false;
		this.textviewDecS.WrapMode = ((global::Gtk.WrapMode)(3));
		this.GtkScrolledWindowDecS.Add (this.textviewDecS);
		this.notebookSendArea.Add (this.GtkScrolledWindowDecS);
		global::Gtk.Notebook.NotebookChild w112 = ((global::Gtk.Notebook.NotebookChild)(this.notebookSendArea[this.GtkScrolledWindowDecS]));
		w112.Position = 2;
		// Notebook tab
		this.labelSDex = new global::Gtk.Label ();
		this.labelSDex.Name = "labelSDex";
		this.labelSDex.LabelProp = global::Mono.Unix.Catalog.GetString ("十进制");
		this.notebookSendArea.SetTabLabel (this.GtkScrolledWindowDecS, this.labelSDex);
		this.labelSDex.ShowAll ();
		this.GtkAlignmentSendArea.Add (this.notebookSendArea);
		this.frameSendArea.Add (this.GtkAlignmentSendArea);
		this.GtkLabelSendArea = new global::Gtk.Label ();
		this.GtkLabelSendArea.Name = "GtkLabelSendArea";
		this.GtkLabelSendArea.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>已发送的数据</b>");
		this.GtkLabelSendArea.UseMarkup = true;
		this.frameSendArea.LabelWidget = this.GtkLabelSendArea;
		this.vpanedRight.Add (this.frameSendArea);
		this.hpanedMain.Add (this.vpanedRight);
		this.tableMain.Add (this.hpanedMain);
		global::Gtk.Table.TableChild w117 = ((global::Gtk.Table.TableChild)(this.tableMain[this.hpanedMain]));
		w117.TopAttach = ((uint)(1));
		w117.BottomAttach = ((uint)(2));
		// Container child tableMain.Gtk.Table+TableChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubarMain'><menu name='FAction' action='FAction'><menuitem name='quitAction' action='quitAction'/></menu><menu name='HAction' action='HAction'><menuitem name='aboutAction' action='aboutAction'/></menu></menubar></ui>");
		this.menubarMain = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubarMain")));
		this.menubarMain.Name = "menubarMain";
		this.tableMain.Add (this.menubarMain);
		global::Gtk.Table.TableChild w118 = ((global::Gtk.Table.TableChild)(this.tableMain[this.menubarMain]));
		w118.YOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tableMain.Gtk.Table+TableChild
		this.statusbarMain = new global::Gtk.Statusbar ();
		this.statusbarMain.Name = "statusbarMain";
		this.statusbarMain.Spacing = 6;
		this.tableMain.Add (this.statusbarMain);
		global::Gtk.Table.TableChild w119 = ((global::Gtk.Table.TableChild)(this.tableMain[this.statusbarMain]));
		w119.TopAttach = ((uint)(2));
		w119.BottomAttach = ((uint)(3));
		w119.YOptions = ((global::Gtk.AttachOptions)(4));
		this.Add (this.tableMain);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 580;
		this.DefaultHeight = 541;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
		this.aboutAction.Activated += new global::System.EventHandler (this.OnAboutActionActivated);
		this.togglebuttonPortSwitch.Clicked += new global::System.EventHandler (this.OntogglebuttonPortSwitchClicked);
		this.radiobuttonText.GroupChanged += new global::System.EventHandler (this.OnRadiobuttonSendActivated);
		this.radiobuttonText.Clicked += new global::System.EventHandler (this.OnRadiobuttonSendActivated);
		this.radiobuttonHex.GroupChanged += new global::System.EventHandler (this.OnRadiobuttonSendActivated);
		this.radiobuttonHex.Clicked += new global::System.EventHandler (this.OnRadiobuttonSendActivated);
		this.radiobuttonDec.Clicked += new global::System.EventHandler (this.OnRadiobuttonSendActivated);
		this.buttonSend.Clicked += new global::System.EventHandler (this.OnButtonSendClicked);
		this.textviewSend.Backspace += new global::System.EventHandler (this.OnTextviewSendBackspace);
		this.spinbuttonInterval.ValueChanged += new global::System.EventHandler (this.OnSpinbuttonIntervalValueChanged);
		this.checkbuttonAutoSend.Clicked += new global::System.EventHandler (this.OnCheckbuttonAutoSendClicked);
		this.buttonClearSendArea.Clicked += new global::System.EventHandler (this.OnButtonClearSendAreaClicked);
		this.buttonClearReceiveArea.Clicked += new global::System.EventHandler (this.OnButtonClearReceiveAreaClicked);
		this.buttonClearAll.Clicked += new global::System.EventHandler (this.OnButtonClearAllClicked);
	}
}
